
SELECT empno , ename , sal ,
rank ()        over (order by sal desc) as col_rank 
dense_rank()    over (order by sal desc) as col_dense_rank 
FROM
t_emp;



/*
How to get unique records without using "DISTINCT" in oracle?
--know 9 different ways
*/


--below will giving all including dublicates.
SELECT  ROLL_NO, STU_NAME
FROM STUDENT LIST
ORDER BY ROLL_NO, STU_NAME;
 --

--m.0 
SELECT DISTINCT  ROLL_NO, STU_NAME
FROM STUDENT LIST
ORDER BY ROLL_NO, STU_NAME;

--m.1
SELECT UNIQUE ROLL_NO, STU_NAME
FROM STUDENT_LIST
ORDER BY ROLL_NO, STU_NAME;

--m.2
SELECT ROLL_NO, STU_NAME
FROM STUDENT_LIST
GROUP BY ROLL_NO, STU_NAME
ORDER BY ROLL_NO, STU_NAME;

--m.3
SELECT ROLL_NO, STU_NAME, COUNT(*)
FROM STUDENT_LIST
GROUP BY ROLL_NO, STU_NAME
ORDER BY ROLL_NO, STU_NAME;


--m.4
SELECT ROLL_NO, STU_NAME
FROM STUDENT_LIST
UNION 
SELECT ROLL_NO, STU_NAME
FROM STUDENT_LIST;

--m.5
SELECT ROLL_NO, STU_NAME
FROM STUDENT_LIST
UNION
SELECT NULL, NULL
FROM DUAL WHERE 1-2;

--m.6
SELECT ROLL_NO, STU_NAME
FROM STUDENT_LIST
UNION ALL
SELECT ROLL_NO, STU_NAME
FROM STUDENT_LIST;

--m.7
SELECT ROLL_NO, STU_NAME
FROM STUDENT_LIST
INTERSECT
SELECT ROLL_NO, STU_NAME
FROM STUDENT_LIST;

--m.8
SELECT ROLL_NO, STU_NAME
FROM STUDENT_LIST
MINUS
SELECT NULL, NULL
FROM DUAL;

--m.9
SELECT ROLL_NO, STU_NAME FROM (
SELECT ROLL_NO, STU_NAME,
ROW_NUMBER() over (partition by ROLL_NO, STU_NAME
                    ORDER BY ROLL_NO, STU_NAME) R
FROM STUDENT_LIST )
where R=1;

--m.10
SELECT ROLL_NO, STU_NAME FROM (
       SELECT ROLL_NO, STU_NAME,
              RANK () over (partition by ROLL_NO, STU_NAME
                      ORDER BY ROWNUM ) R
       FROM STUDENT_LIST )
where R-1;

--m.11
SELECT * FROM STUDENT_LIST
WHERE ROWID IN (  SELECT MIN (ROWID)
                  FROM STUDENT_LIST
                  GROUP BY ROLL_NO, STU_NAME )
ORDER BY ROLL_NO, STU_NAME;


--m.12
SELECT
FROM STUDENT_LIST A
WHERE 1 = ( SELECT COUNT(1)
            FROM STUDENT LIST B
            WHERE A.ROLL_NO= B. ROLL_NO 
            AND A.STU_NAME = B.STU_NAME 
            AND A.ROWID>= B.ROWID );

--welcome traiangle and inverted triangle
SELECT
ROM
ROWNUM,
substr('WELCOME', 1, ROWNUM), substr('WELCOME', ROWNUM)
CONNECT BY
level <= length ('WELCOME');